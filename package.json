{
  "name": "kimmy-app",
  "description": "A modern full-stack template powered by Cloudflare Workers, using Hono for backend APIs, React Router for frontend routing, and shadcn/ui for beautiful, accessible components styled with Tailwind CSS",
  "private": true,
  "type": "module",
  "cloudflare": {
    "label": "React Router + Hono Fullstack App",
    "products": [
      "Workers"
    ],
    "categories": [
      "starter"
    ],
    "docs_url": "https://developers.cloudflare.com/workers",
    "preview_image_url": "https://imagedelivery.net/wSMYJvS3Xw-n339CbDyDIA/cd71c67a-253f-477d-022c-2f90cb4b3d00/public",
    "icon_urls": [],
    "publish": true
  },
  "dependencies": {
    "@cloudflare/ai": "^1.2.2",
    "@hookform/resolvers": "^3.0.0",
    "@radix-ui/react-avatar": "^1.0.0",
    "@radix-ui/react-dialog": "^1.0.0",
    "@radix-ui/react-icons": "^1.3.0",
    "@radix-ui/react-label": "^2.0.0",
    "@radix-ui/react-select": "^2.0.0",
    "@radix-ui/react-slot": "^1.0.0",
    "@radix-ui/react-switch": "^1.0.0",
    "class-variance-authority": "^0.7.0",
    "clsx": "^2.0.0",
    "drizzle-orm": "^0.44.5",
    "hono": "4.8.2",
    "isbot": "5.1.26",
    "lucide-react": "^0.400.0",
    "react": "19.0.0",
    "react-dom": "19.0.0",
    "react-hook-form": "^7.0.0",
    "react-router": "7.6.3",
    "react-toastify": "^11.0.5",
    "recharts": "^3.2.1",
    "resend": "^3.0.0",
    "tailwind-merge": "^2.0.0",
    "zod": "^3.0.0"
  },
  "devDependencies": {
    "@cloudflare/vite-plugin": "1.7.5",
    "@cloudflare/workers-types": "^4.20250425.0",
    "@react-router/dev": "7.6.3",
    "@tailwindcss/vite": "4.1.4",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/node": "24.0.4",
    "@types/react": "19.0.10",
    "@types/react-dom": "19.0.4",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "@vitest/ui": "^3.2.4",
    "drizzle-kit": "^0.31.4",
    "eslint": "^9.34.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "husky": "^9.1.7",
    "jsdom": "^26.1.0",
    "lint-staged": "^16.1.6",
    "prettier": "^3.6.2",
    "tailwindcss": "4.1.1",
    "typescript": "5.8.3",
    "vite": "^6.0.0",
    "vite-tsconfig-paths": "5.1.4",
    "vitest": "^3.2.4",
    "wrangler": "4.21.x"
  },
  "scripts": {
    "build": "react-router build",
    "cf-typegen": "wrangler types",
    "db:generate": "drizzle-kit generate",
    "db:migrate:local": "wrangler d1 migrations apply kimmy-app-db --local",
    "db:migrate:remote": "wrangler d1 migrations apply kimmy-app-db --remote",
    "db:studio": "drizzle-kit studio",
    "db:check": "drizzle-kit check",
    "db:reset:local": "rm -rf .wrangler/state/v3/d1/ && npm run db:migrate:local",
    "db:reset:remote": "echo '⚠️  Remote database reset not implemented for safety. Use Cloudflare dashboard or manual commands.'",
    "db:status:local": "wrangler d1 execute kimmy-app-db --local --command='SELECT name FROM sqlite_master WHERE type=\"table\" ORDER BY name;'",
    "db:status:remote": "wrangler d1 execute kimmy-app-db --remote --command='SELECT name FROM sqlite_master WHERE type=\"table\" ORDER BY name;'",
    "db:info": "wrangler d1 info kimmy-app-db",
    "deploy": "npm run build && wrangler deploy",
    "dev": "react-router dev",
    "dev:local": "wrangler dev --local",
    "preview": "npm run build && vite preview",
    "typecheck": "npm run cf-typegen && react-router typegen && tsc -b",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "format:fix": "prettier --write .",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:check": "eslint .",
    "pre-commit": "lint-staged && npm run test:run",
    "pre-commit:full": "lint-staged && npm run typecheck && npm run test:run",
    "validate": "npm run typecheck && npm run lint && npm run test:run",
    "quality": "npm run format && npm run lint:fix && npm run test:run",
    "prepare": "husky"
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,css,scss,yaml,yml}": [
      "prettier --write"
    ]
  }
}
